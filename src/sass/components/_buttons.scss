//--------------  buttons styles sets
%btn {
  background-color: let(primary);
  color: let(text);
  font-family: inherit;
  font-size: 14px;
  font-weight: 500;
  padding: 10px 25px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  gap: 10px;
  letter-spacing: 0.3px;
  text-transform: capitalize;
  text-decoration: none;
  width: fit-content;
  border: 1px solid transparent;
  user-select: none;
  cursor: pointer;

  // transition bg/boxShadow/scale
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.2s ease,
    box-shadow 0.2s ease-in-out;

  //hover
  // &:not(:disabled):hover {
  //   background-color: color(primary, 10);
  //   transform: scale(1.1);
  // }

  //active
  &:not(:disabled):active {
    transform: scale(0.9);
  }

  &:focus {
    outline: none;
    // box-shadow: 0 0 0 1px color(primary, 0, 30), 0 1px 1px 0 rgba(#000000, 0.07),
    //   0 0 0 4px color(primary, 0, 30);
  }

  //disbled Button
  &:disabled {
    background-color: let(text) !important;
    color: let(mute) !important;
    opacity: 0.8;
    cursor: not-allowed;
  }
}

//--------------  default button
.btn {
  @extend %btn;
}

button {
  cursor: pointer;
  background: none;
  border: none;
  justify-content: center;
  display: flex;
}

@each $key, $value in $colors {
  @each $keySize, $valSize in $size {
    .btn-#{$key}-#{$keySize} {
      @include btn($value);
      padding: #{$valSize};
      color: textColor($value);
      @if ($key == purple) {
        color: $white !important;
      }
      @if ($key == warning) {
        color: black !important;
      }
      @if ($keySize == 'lg') {
        border-radius: 30px !important;
      }

      &:not(:disabled):hover {
        background-color: darken($value, 10%);
        @if ($key == purple) {
          background-color: darken($value, 3%);
        }
      }
      //when focus in button
      &:focus {
        outline: none;
        box-shadow: 0 0 0 1px darken($value, 30%),
          0 1px 1px 0 rgba(#000000, 0.07), 0 0 0 4px darken($value, 25%);
        @if ($key == purple) {
          box-shadow: 0 0 0 1px lighten($value, 10%),
            0 1px 1px 0 rgba(#000000, 0.07), 0 0 0 4px lighten($value, 10%);
        }
      }
    }

    .btn-#{$key}-#{$keySize}-outlined {
      @include btn(transparent);
      color: $value;
      border-color: $value;
      &:not(:disabled):hover {
        color: textColor($value);
        background-color: $value;
      }
    }
  }
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5px;
  border-radius: 50%;

  svg {
    width: 20px;
    height: 20px;
  }

  &:hover {
    background-color: let(bg-200);
  }
}

button.icon {
  all: unset;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 5px !important;
  border-radius: 50%;
  border: none !important;
}
